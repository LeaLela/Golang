GoLang

2.predavanje
-ne korištene varijable i importi su error
-nije objektno orjentiran - nema klasa
-nema nasljeđivanja

-varijabla
-tip podataka
-konstante

-string
-rune-integer 32, predstavlja karaktere kroz unicode vrijednosti
-byte,int,int8,int16,int32,int64,ruen,unit,unit8...
-float32/64
-complex64/128-imaginarni i realni dio brojeva
-*T, pointer to type T

-array [n]T
-slice []T - kad ne znamo koliko treba zauzet array
-struct{} - kao objekt
-map [K]T - K - key, T - value
-interface {}

Deklaracija varijabli
-var keyword
-deklaracija - stvaranje varijable
-incijalizacija - dodjeljivanje vrijednosti varijabli

var brand string
brand = "apple"

var brandName string = "apple"

name := "apple"

var x, y, z = 1, 2, 3

:= 
- samo u scopeu funkcije, 
- ne može se koristiti za update vrijednosti varijable. Treba koristiti =

/////
package main

import "fmt"

func main() {
	var firstName string = "Lea"
	var age int = 23
	var height float64 = 1.75
	var isStudent bool = true

	fmt.Println(firstName, age, height, isStudent)
}
/////

1. := samo lokalne varijable tj. samo u scopeu funkcije
2. koristiti zero value
3. dodavati tipove podataka
4. izbjegavati neiskorištene varijable tj. bit ce error

Konstante
-typed - tip podatka konstante je specificiran
-untyped - tip se nasljeđuje iz vrijednosti varijable

Zero values
-varijable su automatski inicijalizirane sa null vrijednosti ako drukčije nije odrađeno
-string - "" - empty string
-int,float - 0 , 0.0
-bool - False
-array - svaki index ima zero value
-struct - prazan struct gdje svaki član ima zero value
-pointer, interface, function, channel, slice, map - nil

Konverzije tipova
-da bi odradili bilo kakvu operaciju, tipovi podataka varijabli moraju biti isti
-ne može kombinirati različite tipove podataka, izbacit ce compilation error
-rješenje za to:
	var pi float64 = 3.14
	var radius int = 5
	var circle float64 = 2 * pi * float54(radius)

Scope varijable
-global varijabla - na vrhu deklarirana, dostupna na svim scopeovima, nije dobro koristiti - memory leap/spike
-lokalna varijabla - 
-block scope -



3.predavanje

Strukture

struct Dog{
	name string
	age float
}
-najbliže objektu
-value type - when asssignig a struct to another struct, a copy is made
-named fields - each field in struct has it's name and type
-methods

-struktura može biti metoda, može biti proširena koristeći kompozicije

Stvaranje novog projekta
go mod init learajic/code-camp/3

Objekti u GO 
-svi tipovi podataka mogu bit Objekti
-kompozicija - struct ili interface 
-go ne podržava nasljeđivanje nema class keyworda

Metode
-funkcija koja se može pozivat samo na tipu podatka kojim je definirana, eksplicitno vezana za specifični tip
-nema private i public, nego sa velikim i malim slovom to označavamo. Veliko slovo ima veću važnost nego malo slovo.
-kada koristimo pakete metode i strukture nazivamo velikim slovom da bi im mogli pristupiti u drugim paketima

Receiver metode
-best by value - stvara se kopija strukture
-value Receiver - stvara kopiju i nad kopijom poziva funkcije itd.
-pointer Receiver - šalje adresu na varijablu/strukturu, a ne na kopiju - zato ovo treba koristiti ako ćemo mijenjati propertije jer original mijenja
